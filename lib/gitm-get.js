#!/usr/bin/env node
"use strict";require("core-js/modules/es.symbol.js");require("core-js/modules/es.symbol.description.js");require("core-js/modules/es.array.concat.js");require("core-js/modules/es.array.for-each.js");require("core-js/modules/es.function.name.js");require("core-js/modules/es.object.to-string.js");require("core-js/modules/es.promise.js");require("core-js/modules/es.regexp.flags.js");require("core-js/modules/web.dom-collections.for-each.js");require("regenerator-runtime/runtime.js");function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg);var value=info.value}catch(error){reject(error);return}if(info.done){resolve(value)}else{Promise.resolve(value).then(_next,_throw)}}function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise(function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(undefined)})}}var program=require("commander");var sh=require("shelljs");var _require=require("./conf/get"),options=_require.options,args=_require.args;var _require2=require("./js/index"),queue=_require2.queue,getCurrent=_require2.getCurrent,getStashList=_require2.getStashList,warning=_require2.warning,createArgs=_require2.createArgs;program.name("gitm get").usage("[message] [index]").description("恢复暂存区文件");if(args.length>0)program.arguments(createArgs(args));options.forEach(function(o){program.option(o.flags,o.description,o.defaultValue)});program.action(function(){var _ref=_asyncToGenerator(regeneratorRuntime.mark(function _callee(message,index,opt){var list;return regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!message)message=getCurrent();_context.next=3;return getStashList(message);case 3:list=_context.sent;if(list.length===0)sh.echo(warning("该分支没有暂存任何文件！"));if(index===undefined&&list.length>1)sh.echo(warning("该分支下有".concat(list.length,"条暂存记录，默认恢复最近的一条记录")));if(list.length>2)sh.echo(warning("该分支下有".concat(list.length,"条暂存记录，建议定期清理不必要的暂存记录！")));queue([{cmd:"git stash ".concat(opt.keep?"apply":"pop"," ").concat(list[index||0].key),config:{again:opt.keep?false:"git stash drop ".concat(list[index||0].key),success:"文件恢复成功",fail:"恢复失败，请检查冲突"}}]);case 8:case"end":return _context.stop()}}},_callee)}));return function(_x,_x2,_x3){return _ref.apply(this,arguments)}}());program.parse(process.argv);