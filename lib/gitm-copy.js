#!/usr/bin/env node
"use strict";require("core-js/modules/es.symbol.js");require("core-js/modules/es.symbol.description.js");require("core-js/modules/es.array.concat.js");require("core-js/modules/es.array.for-each.js");require("core-js/modules/es.array.join.js");require("core-js/modules/es.function.name.js");require("core-js/modules/es.regexp.exec.js");require("core-js/modules/es.regexp.flags.js");require("core-js/modules/es.string.match.js");require("core-js/modules/es.string.replace.js");require("core-js/modules/web.dom-collections.for-each.js");var program=require("commander");var sh=require("shelljs");var _require=require("./conf/copy"),options=_require.options,args=_require.args;var _require2=require("./js/index"),warning=_require2.warning,queue=_require2.queue,getStatus=_require2.getStatus,getCurrent=_require2.getCurrent,createArgs=_require2.createArgs;program.name("gitm copy").usage("<from> [commitid...] [-k] [-a]").description("cherry-pick易用版本，从某个分支拷贝某条记录合并到当前分支");if(args.length>0)program.arguments(createArgs(args));options.forEach(function(o){program.option(o.flags,o.description,o.defaultValue)});program.action(function(from,commitid,opts){var status=getStatus(),cur=getCurrent();if(!status)sh.exit(1);if(opts.key!==""||opts.author!==""){var cmd=["git checkout ".concat(from),"git log --grep=".concat(opts.key," --author=").concat(opts.author)];sh.echo(warning("为确保copy准确，请尽量完整填写关键词"));queue(cmd).then(function(data){var commits=[];if(data[1].code===0){var logs=data[1].out.match(/(commit\s[a-z0-9]*\n+)/g)||[],cmds=["git checkout ".concat(cur)];logs.forEach(function(el){commits.push(el.replace(/(commit\s)|\n/g,""))});commits.reverse();if(commits.length>0){cmds=cmds.concat([{cmd:"git cherry-pick ".concat(commits.join(" ")),config:{slient:false,again:false,success:"记录合并成功",fail:"合并失败，请根据提示处理"}},{cmd:"git push",config:{slient:false,again:true,success:"推送成功",fail:"推送失败，请根据提示处理"}}])}else{sh.echo("没有找到任何记录")}queue(cmds)}else{sh.echo(data[1].err)}})}else{var _cmd=[{cmd:"git cherry-pick ".concat(commitid.join(" ")),config:{slient:false,again:false,success:"记录合并成功",fail:"合并失败，请根据提示处理"}},{cmd:"git push",config:{slient:false,again:true,success:"推送成功",fail:"推送失败，请根据提示处理"}}];queue(_cmd)}});program.parse(process.argv);