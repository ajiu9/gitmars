"use strict";require("core-js/modules/es.array.concat.js");require("core-js/modules/es.array.filter.js");require("core-js/modules/es.array.find-index.js");require("core-js/modules/es.array.for-each.js");require("core-js/modules/es.array.includes.js");require("core-js/modules/es.array.index-of.js");require("core-js/modules/es.array.join.js");require("core-js/modules/es.array.map.js");require("core-js/modules/es.array.splice.js");require("core-js/modules/es.function.name.js");require("core-js/modules/es.object.assign.js");require("core-js/modules/es.object.to-string.js");require("core-js/modules/es.promise.js");require("core-js/modules/es.regexp.exec.js");require("core-js/modules/es.string.match.js");require("core-js/modules/es.string.replace.js");require("core-js/modules/es.string.split.js");require("core-js/modules/es.string.trim.js");require("core-js/modules/web.dom-collections.for-each.js");require("regenerator-runtime/runtime.js");function _createForOfIteratorHelper(o,allowArrayLike){var it;if(typeof Symbol==="undefined"||o[Symbol.iterator]==null){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length==="number"){if(it)o=it;var i=0;var F=function F(){};return{s:F,n:function n(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]}},e:function e(_e){throw _e},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var normalCompletion=true,didErr=false,err;return{s:function s(){it=o[Symbol.iterator]()},n:function n(){var step=it.next();normalCompletion=step.done;return step},e:function e(_e2){didErr=true;err=_e2},f:function f(){try{if(!normalCompletion&&it.return!=null)it.return()}finally{if(didErr)throw err}}}}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(o);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i]}return arr2}function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg);var value=info.value}catch(error){reject(error);return}if(info.done){resolve(value)}else{Promise.resolve(value).then(_next,_throw)}}function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise(function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(undefined)})}}var fs=require("fs");var sh=require("shelljs");var colors=require("colors");var _require=require("./getGitConfig")(),appName=_require.appName;var _require2=require("./gitRevParse")(),root=_require2.root,gitDir=_require2.gitDir;var config=require("./getConfig")();function warning(txt){return colors.yellow(txt)}function error(txt){return colors.red(txt)}function success(txt){return colors.green(txt)}function writeFile(url,data){return new Promise(function(resolve,reject){fs.writeFile(url,data,function(err){if(err){reject(new Error("文件写入错误"))}else{resolve()}})})}function mapTemplate(tmp,data){if(!tmp||!data)return null;var str=""+tmp.replace(/\$\{([a-zA-Z0-9-_]+)\}/g,function(a,b){if(typeof data==="function"){return data(b)}for(var k in data){if(b===k){return data[k]}}});return str}function getSeconds(str){var match=String(str).match(/^(\d+)([a-zA-Z]+)$/),time;if(!match)return null;time=+match[1];switch(match[2]){case"m":time*=60;break;case"h":time*=3600;break;case"d":time*=86400;break;case"w":time*=604800;break;case"M":time*=2592e3;break;case"y":time*=31536e3;break;default:break}return parseInt(Date.now()/1e3-time)}function wait(list,fun){if(list.length===0){fun();return}else{fun(list[0],function(){var kill=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;if(kill)return;list.shift();wait(list,fun)})}}function queue(list){return new Promise(function(resolve,reject){var returns=[];if(list.length===0)reject("指令名称不能为空");list=JSON.parse(JSON.stringify(list));wait(list,function(command,cb){var cfg={silent:true,postmsg:false,kill:true,again:false},cmd=command;if(command instanceof Object){cfg=Object.assign(cfg,command.config||{});cmd=command.cmd}if(!cmd){resolve(returns)}else{sh.exec(cmd,cfg,function(code,out,err){var msg=getCommandMessage(cmd);try{out=JSON.parse(out)}catch(err){out=out.replace(/\n*$/g,"")}returns.push({code:code,out:out,err:err,cfg:cfg,cmd:cmd});if(code!==0)setLog({command:command,code:code,out:out,err:err});if(code!==0&&cfg.kill){var rest=JSON.parse(JSON.stringify(list));if(!cfg.again){rest.shift()}else if(cfg.again!==true){rest.splice(0,1,cfg.again)}cb(true);setCache(rest);cfg.silent&&sh.echo(error(err));sh.echo(error(cfg.fail||msg.fail||"出错了！指令 "+cmd+" 执行失败，中断了进程"));cfg.postmsg&&postMessage("出错了！指令 "+cmd+" 执行失败，中断了进程");rest.length>0&&sh.echo(error("请处理相关问题之后输入gitm continue继续"));sh.exit(1)}else{if(code===0){var m=cfg.success||msg.success;if(m){sh.echo(success(m));cfg.postmsg&&postMessage(m)}}else{var _m=config.fail||msg.fail||"指令 "+cmd+" 执行失败";_m&&sh.echo(warning(_m))}cb()}})}})})}function getCache(){var arr=[];if(sh.test("-f",gitDir+"/.gitmarscommands")){arr=sh.cat(gitDir+"/.gitmarscommands").stdout.split("\n")[0].replace(/(^\n*)|(\n*$)/g,"").replace(/\n{2,}/g,"\n").replace(/\r/g,"");arr=JSON.parse(decodeURIComponent(arr))}return arr}function setCache(rest){sh.touch(gitDir+"/.gitmarscommands");sh.sed("-i",/[\s\S\n\r\x0a\x0d]*/,encodeURIComponent(JSON.stringify(rest)),gitDir+"/.gitmarscommands")}function setLog(log){sh.touch(gitDir+"/.gitmarslog");sh.sed("-i",/[\s\S\n\r\x0a\x0d]*/,encodeURIComponent(JSON.stringify(log)),gitDir+"/.gitmarslog")}var getStatusInfo=function getStatusInfo(){var config=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var _config$silent=config.silent,silent=_config$silent===void 0?true:_config$silent;var out=sh.exec("git status -s --no-column",{silent:silent}).stdout.replace(/(^\s+|\n*$)/g,"");var list=out?out.replace(/\n(\s+)/g,"\n").split("\n"):[],sum={A:[],D:[],M:[],"??":[]};if(list.length===0)return sum;list.forEach(function(str){var arr=str.trim().replace(/\s+/g," ").split(" "),type=arr.splice(0,1);if(!sum[type])sum[type]=[];sum[type].push(arr.join(" "))});return sum};function getStatus(){var sum=getStatusInfo({silent:false});if(sum.A.length>0||sum.D.length>0||sum.M.length>0){sh.echo(error("您还有未提交的文件，请处理后再继续")+"\n如果需要暂存文件请执行: gitm save\n恢复时执行：gitm get");sh.exit(1);return false}else if(sum["??"].length>0){sh.echo(warning("您有未加入版本的文件,")+"\n如果需要暂存文件请执行: gitm save --force\n恢复时执行：gitm get")}return true}function getLogs(){var config=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var lastet=config.lastet,limit=config.limit,branches=config.branches;var keys=["%H","%T","%P","%an","%ae","%al","%aL","%ad","%ar","%at","%aI","%as","%cn","%ce","%cl","%cL","%cd","%cr","%ct","%cI","%cs","%d","%D","%S","%e","%s"];var results=sh.exec("git log".concat(limit?' -"'+limit+'"':"").concat(lastet?' --since="'+getSeconds(lastet)+'"':"").concat(branches?' --branches="*'+branches+'"':"",' --date-order --pretty=format:"').concat(keys.join(",="),'-end-"'),{silent:true}).stdout.replace(/[\r\n]+/g,"").replace(/-end-$/,"");var logList=[];results&&results.split("-end-").forEach(function(log){var args=log.split(",="),map={};keys.forEach(function(key,i){map[key]=args[i]});logList.push(map)});return logList}var checkBranch=function checkBranch(name){return searchBranchs().findIndex(function(bh){return bh===name})>-1?true:false};var getCurrent=function getCurrent(){return sh.exec("git br --show-current",{silent:true}).stdout.replace(/[\s]*$/g,"")};var searchBranch=function(){var _ref=_asyncToGenerator(regeneratorRuntime.mark(function _callee(){var opt,_opt$key,key,_opt$type,type,_opt$remote,remote,data,arr,_args=arguments;return regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:opt=_args.length>0&&_args[0]!==undefined?_args[0]:{};_opt$key=opt.key,key=_opt$key===void 0?null:_opt$key,_opt$type=opt.type,type=_opt$type===void 0?null:_opt$type,_opt$remote=opt.remote,remote=_opt$remote===void 0?false:_opt$remote;_context.next=4;return queue(["gitm branch".concat(key?" -k "+key:"").concat(type?" -t "+type:"").concat(remote?" -r":"")]);case 4:data=_context.sent[0].out.replace(/\*\s+/g,"");arr=data?data.split("\n"):[];arr=arr.map(function(el){return el.trim()});return _context.abrupt("return",arr);case 8:case"end":return _context.stop()}}},_callee)}));return function searchBranch(){return _ref.apply(this,arguments)}}();var searchBranchs=function searchBranchs(){var opt=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var _opt$path=opt.path,path=_opt$path===void 0?pwd:_opt$path,_opt$key2=opt.key,key=_opt$key2===void 0?null:_opt$key2,_opt$type2=opt.type,type=_opt$type2===void 0?null:_opt$type2,_opt$remote2=opt.remote,remote=_opt$remote2===void 0?false:_opt$remote2;var data=sh.exec("git ls-remote".concat(remote?" --refs":" --heads",' --quiet --sort="version:refname" ').concat(path),{silent:true}).stdout.replace(/\n*$/g,"");var arr=data?data.split("\n"):[],map={heads:[],tags:[],others:[]};var _iterator=_createForOfIteratorHelper(arr),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var el=_step.value;var match=el.match(/^\w+[\s]+refs\/(heads|remotes|tags)\/([\w-\/]+)$/);if(!match)continue;switch(match[1]){case"heads":map.heads.push(match[2]);break;case"remotes":map.heads.push(match[2]);break;case"tags":map.tags.push(match[2]);break;default:map.others.push(match[2]);break}}}catch(err){_iterator.e(err)}finally{_iterator.f()}if(type&&["bugfix","feature","support"].includes(type)){map.heads=map.heads.filter(function(el){return el.indexOf("/"+type+"/")>-1})}if(key){map.heads=map.heads.filter(function(el){return el.indexOf(key)>-1})}return map.heads};var getStashList=function(){var _ref2=_asyncToGenerator(regeneratorRuntime.mark(function _callee2(key){var data,list,arr;return regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return queue(["git stash list"]);case 2:data=_context2.sent[0].out.replace(/^\*\s+/,"");list=data&&data.split("\n")||[],arr=[];if(list.length>10)sh.echo(warning("该项目下一共有".concat(list.length,"条暂存记录，建议定期清理！")));try{list.forEach(function(item){var msgArr=item.split(":"),first=msgArr.shift();if(!key||key&&key===msgArr[msgArr.length-1].trim()){var m=first.match(/^stash@\{(\d+)\}$/);if(msgArr.length>1)msgArr.shift();arr.push({key:first,index:+m[1],msg:msgArr.join(":").trim()})}})}catch(e){}return _context2.abrupt("return",arr);case 7:case"end":return _context2.stop()}}},_callee2)}));return function getStashList(_x){return _ref2.apply(this,arguments)}}();function getMessage(type){var str="",d=new Date;switch(type){case"time":str=d;break;case"timeNum":str=d.getTime();break;case"pwd":str=root;break;case"project":str=appName;break;case"user":str=config.user;break;default:break}return str}function postMessage(msg){if(!config.msgTemplate){sh.echo(error("请配置消息发送api模板地址"));return}var message=mapTemplate(config.msgTemplate,function(key){if(key==="message")return msg;return getMessage(key)});config.msgUrl&&sendMessage(message)}var sendMessage=function sendMessage(message){var cfg=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var _cfg$silent=cfg.silent,silent=_cfg$silent===void 0?true:_cfg$silent;if(!config.msgUrl){sh.echo(error("请配置消息推送地址"));return}message=message.replace(/\s/g,"");config.msgUrl&&sh.exec('curl -i -H "Content-Type: application/json" -X POST -d \'{"envParams":{"error_msg":"\''.concat(message,"'\"}}' \"").concat(config.msgUrl,'"'),{silent:silent})};function getCommandMessage(cmd){var msg={},arr=cmd.replace(/[\s]+/g," ").split(" ");if(arr.length<2||arr[0]!=="git")return msg;switch(arr[1]){case"checkout":msg.success="切换分支成功";msg.fail="切换分支失败";break;case"pull":msg.success="拉取代码成功";msg.fail="拉取代码失败";break;case"fetch":msg.success="抓取成功";msg.fail="抓取失败";break;case"commit":msg.success="提交成功";msg.fail="提交失败";break;case"push":msg.success="推送成功";msg.fail="推送失败";break;case"cherry-pick":msg.success="同步提交记录成功";msg.fail="同步提交记录失败";break;case"merge":msg.success="merge分支成功";msg.fail="merge分支失败";break;case"rebase":msg.success="rebase分支成功";msg.fail="rebase分支失败";break;case"revert":msg.success="撤销成功";msg.fail="撤销失败";break;case"clean":msg.success="清理成功";msg.fail="清理失败";break;default:break}return msg}function createArgs(args){var argArr=[];args.forEach(function(arg){var str=arg.name;if(arg.variadic)str+="...";if(arg.required)str="<"+str+">";else str="["+str+"]";argArr.push(str)});return argArr.join(" ")}function compareVersion(basicVer,compareVer){if(basicVer===null)return null;basicVer=basicVer+".";compareVer=compareVer+".";var bStr=parseFloat(basicVer),cStr=parseFloat(compareVer),bStrNext=parseFloat(basicVer.replace(bStr+".",""))||0,cStrNext=parseFloat(compareVer.replace(cStr+".",""))||0;if(cStr>bStr){return false}else if(cStr<bStr){return true}else{if(bStrNext>=cStrNext){return true}else{return false}}}module.exports={warning:warning,error:error,success:success,writeFile:writeFile,mapTemplate:mapTemplate,getSeconds:getSeconds,wait:wait,queue:queue,getCache:getCache,setCache:setCache,setLog:setLog,getStatusInfo:getStatusInfo,getStatus:getStatus,getLogs:getLogs,checkBranch:checkBranch,getCurrent:getCurrent,searchBranch:searchBranch,searchBranchs:searchBranchs,getStashList:getStashList,postMessage:postMessage,sendMessage:sendMessage,getCommandMessage:getCommandMessage,createArgs:createArgs,compareVersion:compareVersion};