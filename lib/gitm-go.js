#!/usr/bin/env node
"use strict";require("core-js/modules/es.symbol");require("core-js/modules/es.symbol.description");require("core-js/modules/es.array.includes");require("core-js/modules/es.function.name");require("core-js/modules/es.object.to-string");require("core-js/modules/es.promise");require("core-js/modules/es.regexp.exec");require("core-js/modules/es.string.includes");require("core-js/modules/es.string.split");require("regenerator-runtime/runtime");function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg);var value=info.value}catch(error){reject(error);return}if(info.done){resolve(value)}else{Promise.resolve(value).then(_next,_throw)}}function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise(function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(undefined)})}}var program=require("commander");var fs=require("fs");var sh=require("shelljs");var _require=require("./conf/build"),options=_require.options,args=_require.args;var _require2=require("./js/index"),queue=_require2.queue,success=_require2.success,warning=_require2.warning,getCurrent=_require2.getCurrent,getLogs=_require2.getLogs,compareVersion=_require2.compareVersion;var getConfig=require("./js/getConfig");var global=require("./js/global");var _require3=require("./js/global"),pwd=_require3.pwd,gitDir=_require3.gitDir,gitHookDir=_require3.gitHookDir;program.name("gitm go").usage("[command]").description("智能猜测你要执行的动作").arguments("[command]").action(function(){var _ref=_asyncToGenerator(regeneratorRuntime.mark(function _callee(command,opt){var config,mainBranchs,current,branchPrefix;return regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:config=getConfig();mainBranchs=[config.master,config.develop,config.release,config.support,config.bugfix];current=getCurrent();branchPrefix=current.split("/")[0];sh.echo(success("当前分支".concat(current,"，系统猜测你可能想做以下操作：")));console.log(branchPrefix);if(mainBranchs.includes(current)){}else if(branchPrefix==="feature"){}else if(branchPrefix==="bugfix"){}else if(branchPrefix==="support"){}case 7:case"end":return _context.stop()}}},_callee)}));return function(_x,_x2){return _ref.apply(this,arguments)}}());program.parse(process.argv);