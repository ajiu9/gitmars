#!/usr/bin/env node
"use strict";require("core-js/modules/es.symbol");require("core-js/modules/es.symbol.description");require("core-js/modules/es.array.concat");require("core-js/modules/es.array.for-each");require("core-js/modules/es.array.includes");require("core-js/modules/es.function.name");require("core-js/modules/es.object.to-string");require("core-js/modules/es.promise");require("core-js/modules/es.regexp.exec");require("core-js/modules/es.regexp.flags");require("core-js/modules/es.string.includes");require("core-js/modules/es.string.match");require("core-js/modules/es.string.replace");require("core-js/modules/es.string.split");require("core-js/modules/web.dom-collections.for-each");require("regenerator-runtime/runtime");function _createForOfIteratorHelper(o,allowArrayLike){var it;if(typeof Symbol==="undefined"||o[Symbol.iterator]==null){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length==="number"){if(it)o=it;var i=0;var F=function F(){};return{s:F,n:function n(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]}},e:function e(_e){throw _e},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var normalCompletion=true,didErr=false,err;return{s:function s(){it=o[Symbol.iterator]()},n:function n(){var step=it.next();normalCompletion=step.done;return step},e:function e(_e2){didErr=true;err=_e2},f:function f(){try{if(!normalCompletion&&it.return!=null)it.return()}finally{if(didErr)throw err}}}}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(o);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i]}return arr2}function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg);var value=info.value}catch(error){reject(error);return}if(info.done){resolve(value)}else{Promise.resolve(value).then(_next,_throw)}}function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise(function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(undefined)})}}var program=require("commander");var fs=require("fs");var sh=require("shelljs");var _require=require("./conf/hook"),options=_require.options,args=_require.args;var _require2=require("./js/index"),queue=_require2.queue,success=_require2.success,warning=_require2.warning,error=_require2.error,createArgs=_require2.createArgs,getCurrent=_require2.getCurrent,getLogs=_require2.getLogs,compareVersion=_require2.compareVersion;var _require3=require("./js/hook"),createHooks=_require3.createHooks,removeHooks=_require3.removeHooks,createHookShell=_require3.createHookShell,removeHookShell=_require3.removeHookShell,createLocalShell=_require3.createLocalShell,removeLocalShell=_require3.removeLocalShell;var gitRevParse=require("./js/gitRevParse");var getConfig=require("./js/getConfig");var _require4=require("./js/global"),pwd=_require4.pwd,gitDir=_require4.gitDir,gitHookDir=_require4.gitHookDir;var ora=require("ora");var ciInfo=require("ci-info");program.name("gitm hook").usage("[command]").description("git hook钩子");if(args.length>0)program.arguments(createArgs(args));options.forEach(function(o){program.option(o.flags,o.description,o.defaultValue)});program.action(function(){var _ref=_asyncToGenerator(regeneratorRuntime.mark(function _callee(command,args,opt){var current,config,getIsMergedBranch,getIsUpdatedInTime,getIsMergeAction,getBehandLogs,getAheadLogs,getGitVersion,gitVersion,gitVersionIsNew,_gitRevParse,prefix,behandLogs,aheadLogs,isMerge,_iterator,_step,logStr,logs;return regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(80808080,command,args,opt.latest,opt.type);current=getCurrent();config=getConfig();getIsMergedBranch=function getIsMergedBranch(){var branch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:"dev";var result=sh.exec("git branch --contains ".concat(current),{silent:true}).stdout.replace(/[\n\s]*$/g,"");return result.split("\n").includes(branch)};getIsUpdatedInTime=function getIsUpdatedInTime(){var isUpdated=false,mainVers=[],currentVers=[];var mainLogs=getLogs({latest:opt.latest,limit:opt.limit,branches:opt.branch});var currentLogs=getLogs({latest:opt.latest,limit:opt.limit,branches:current});mainLogs.forEach(function(log){mainVers.push(log["%H"])});currentLogs.forEach(function(log){var arr=log["%P"]?log["%P"].split(" "):[];arr.forEach(function(item){currentVers.push(item)})});mainVer:for(var _i=0,_mainVers=mainVers;_i<_mainVers.length;_i++){var ver=_mainVers[_i];if(currentVers.includes(ver)){isUpdated=true;break mainVer}}console.log(mainVers,currentVers);return isUpdated};getIsMergeAction=function getIsMergeAction(){var currentLogs=getLogs({limit:1,branches:current});var p=currentLogs[0]["%P"]?currentLogs[0]["%P"].split(" "):[];return p.length>1};getBehandLogs=function getBehandLogs(){sh.exec("git fetch",{silent:true});var result=sh.exec("git log ".concat(current,"..origin/").concat(current,' --pretty=format:"%p"'),{silent:true}).stdout.replace(/[\s]*$/g,"");return result?result.split("\n"):[]};getAheadLogs=function getAheadLogs(){sh.exec("git fetch",{silent:true});var result=sh.exec("git log origin/".concat(current,"..").concat(current,' --pretty=format:"%p"'),{silent:true}).stdout.replace(/[\s]*$/g,"");return result?result.split("\n"):[]};getGitVersion=function getGitVersion(){var version=sh.exec("git --version",{silent:true}).stdout.replace(/\s*$/g,"").match(/[\d.?]+/g);if(!version){sh.echo(warning("没有找到git"));sh.exit(1);return}version=version[0];return version};if(!opt.noVerify){_context.next=12;break}sh.exit(0);return _context.abrupt("return");case 12:if(!(command==="init")){_context.next=27;break}gitVersion=getGitVersion();gitVersionIsNew=compareVersion(gitVersion,"2.13.0");_gitRevParse=gitRevParse(),prefix=_gitRevParse.prefix;if(!(ciInfo.isCI&&config.skipCI)){_context.next=19;break}console.log("持续集成环境，跳过钩子安装");return _context.abrupt("return");case 19:if(!fs.existsSync(gitHookDir)){fs.mkdirSync(gitHookDir)}if(["1","true"].includes(process.env.GITMARS_SKIP_HOOKS||"")){sh.echo(warning("已存在环境变量GITMARS_SKIP_HOOKS，跳过安装"));process.exit(0)}if(!gitVersionIsNew){sh.echo(warning("Gitmars需要使用2.13.0以上版本的Git，当前版本："+gitVersion));process.exit(0)}createHooks(gitHookDir);createHookShell(gitHookDir);createLocalShell(gitHookDir,"yarn",prefix);_context.next=66;break;case 27:if(!(command==="remove")){_context.next=33;break}removeHooks();removeHookShell();removeLocalShell();_context.next=66;break;case 33:if(!(opt.type===1)){_context.next=36;break}_context.next=66;break;case 36:if(!(opt.type===2)){_context.next=39;break}_context.next=66;break;case 39:if(!(opt.type===3)){_context.next=65;break}behandLogs=getBehandLogs();aheadLogs=getAheadLogs();isMerge=true;_iterator=_createForOfIteratorHelper(aheadLogs);_context.prev=44;_iterator.s();case 46:if((_step=_iterator.n()).done){_context.next=54;break}logStr=_step.value;logs=logStr.split(" ");if(!(logs.length<2)){_context.next=52;break}isMerge=false;return _context.abrupt("break",54);case 52:_context.next=46;break;case 54:_context.next=59;break;case 56:_context.prev=56;_context.t0=_context["catch"](44);_iterator.e(_context.t0);case 59:_context.prev=59;_iterator.f();return _context.finish(59);case 62:if(isMerge){sh.exit(0)}else{sh.echo(error("不允许在主干分支直接更改代码提交，请联系管理员"));sh.exit(1)}_context.next=66;break;case 65:if(opt.type===4){}case 66:sh.exit(1);case 67:case"end":return _context.stop()}}},_callee,null,[[44,56,59,62]])}));return function(_x,_x2,_x3){return _ref.apply(this,arguments)}}());program.parse(process.argv);